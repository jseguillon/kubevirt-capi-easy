# guest-console-log [    3.974876] [talos] pulling "ghcr.io/siderolabs/installer:v1.9.5"                                                                                                                                             
# guest-console-log [    3.976442] [talos] volume status {"component": "controller-runtime", "controller": "block.VolumeManagerController", "volume": "STATE", "phase": "failed -> failed", "error": "error evaluating disk locator: no such attribute(s): system_disk"}                                                                                                                                                                                                
# guest-console-log [   30.305742] 2025/04/26 13:38:29 running Talos installer v1.9.5                                                                                                                                                
# guest-console-log [   30.310391] Error: failed to open blockdevice .: open .: is a directory                                                                                                                                       
# guest-console-log [    3.974876] [talos] pulling "ghcr.io/siderolabs/installer:v1.9.5"                                                                                                                                             
# guest-console-log [    3.976442] [talos] volume status {"component": "controller-runtime", "controller": "block.VolumeManagerController", "volume": "STATE", "phase": "failed -> failed", "error": "error evaluating disk locator: 
# no such attribute(s): system_disk"}                                                                                                                                                                                                
# guest-console-log [   30.305742] 2025/04/26 13:38:29 running Talos installer v1.9.5                                                                                                                                                
# guest-console-log [   30.310391] Error: failed to open blockdevice .: open .: is a directory                                                                                                                                       
# guest-console-log [    3.974876] [talos] pulling "ghcr.io/siderolabs/installer:v1.9.5"                                                                                                                                             
# guest-console-log [    3.976442] [talos] volume status {"component": "controller-runtime", "controller": "block.VolumeManagerController", "volume": "STATE", "phase": "failed -> failed", "error": "error evaluating disk locator: 
# no such attribute(s): system_disk"}                                                                                                                                                                                                
# guest-console-log [   30.305742] 2025/04/26 13:38:29 running Talos installer v1.9.5                                                                                                                                                
# guest-console-log [   30.310391] Error: failed to open blockdevice .: open .: is a directory                                                                                                                                       
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: capi-quickstart
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 10.243.0.0/16
    services:
      cidrBlocks:
      - 10.95.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: TalosControlPlane
    name: capi-quickstart-controlplane
    namespace: default
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: KubevirtCluster
    name: capi-quickstart
    namespace: default
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: KubevirtCluster
metadata:
  name: capi-quickstart
  namespace: default
spec:
  controlPlaneServiceTemplate:
    spec:
      type: ClusterIP
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: KubevirtMachineTemplate
metadata:
  name: capi-quickstart-control-plane-t18
  namespace: default
spec:
  template:
    spec:
      virtualMachineBootstrapCheck:
        checkStrategy: none
      virtualMachineTemplate:
        metadata:
          namespace: default
        spec:
          dataVolumeTemplates:
          - metadata:
              name: boot-volume
            spec:
              pvc:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 10G
                storageClassName: longhorn
                volumeMode: Block
              source:
                http:
                  url: https://factory.talos.dev/image/376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba/v1.9.5/openstack-amd64.raw.xz #https://factory.talos.dev/image/376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba/v1.9.5/openstack-amd64.iso
                # pvc:
                  # name: quay.io/capk/ubuntu-2404-container-disk:v1.32.1
                  # namespace: default
          instancetype:
            kind: VirtualMachineClusterInstancetype
            name: o1.xlarge
          preference:
            kind: VirtualMachineClusterPreference
            name: talos
          runStrategy: Always
          template:
            spec:
              domain:
                devices:
                  disks:
                  - disk:
                      bus: virtio
                    name: dv-volume
                  networkInterfaceMultiqueue: true
              evictionStrategy: External
              volumes:
              - dataVolume:
                  name: boot-volume
                name: dv-volume
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: TalosControlPlane
metadata:
  name: capi-quickstart-controlplane
  namespace: default
spec:
  controlPlaneConfig:
    controlplane:
      configPatches:
      - op: add
        path: /cluster/network/cni
        value:
          name: none
      - op: add
        path: /cluster/inlineManifests
        value:
        - contents: |
            ---
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: cilium-install
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: cluster-admin
            subjects:
            - kind: ServiceAccount
              name: cilium-install
              namespace: kube-system
            ---
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: cilium-install
              namespace: kube-system
            ---
            apiVersion: batch/v1
            kind: Job
            metadata:
              name: cilium-install
              namespace: kube-system
            spec:
              backoffLimit: 10
              template:
                metadata:
                  labels:
                    app: cilium-install
                spec:
                  restartPolicy: OnFailure
                  tolerations:
                    - operator: Exists
                    - effect: NoSchedule
                      operator: Exists
                    - effect: NoExecute
                      operator: Exists
                    - effect: PreferNoSchedule
                      operator: Exists
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
                      effect: NoSchedule
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
                      effect: NoExecute
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
                      effect: PreferNoSchedule
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                          - matchExpressions:
                              - key: node-role.kubernetes.io/control-plane
                                operator: Exists
                  serviceAccount: cilium-install
                  serviceAccountName: cilium-install
                  hostNetwork: true
                  containers:
                  - name: cilium-install
                    image: quay.io/cilium/cilium-cli-ci:latest
                    env:
                    - name: KUBERNETES_SERVICE_HOST
                      valueFrom:
                        fieldRef:
                          apiVersion: v1
                          fieldPath: status.podIP
                    - name: KUBERNETES_SERVICE_PORT
                      value: "6443"
                    command:
                    - cilium
                    - install
                    - --set
                    - ipam.mode=kubernetes
                    - --set
                    - kubeProxyReplacement=true
                    - --set
                    - securityContext.capabilities.ciliumAgent={CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}
                    - --set
                    - securityContext.capabilities.cleanCiliumState={NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}
                    - --set
                    - cgroup.autoMount.enabled=false
                    - --set
                    - cgroup.hostRoot=/sys/fs/cgroup
                    - --set
                    - k8sServiceHost=localhost
                    - --set
                    - k8sServicePort=7445
                    - --set
                    - bpf.hostLegacyRouting=false
                    - --set
                    - bpf.masquerade=true
                    - --set
                    - nodePort.enabled=true
                    - --set
                    - routingMode=tunnel
                    - --set
                    - tunnelProtocol=geneve
                    - --set
                    - socketLB.enabled=true
                    - --set
                    - hubble.enabled=true
                    - --set
                    - hubble.relay.enabled=true
          name: cilium-install
      - op: add
        path: /cluster/proxy/disabled
        value: true
      generateType: controlplane
      talosVersion: v1.9.5
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: KubevirtMachineTemplate
    name: capi-quickstart-control-plane-t18
    namespace: default
  replicas: 1
  version: v1.32.1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: KubevirtMachineTemplate
metadata:
  name: capi-quickstart-md-0-t18
  namespace: default
spec:
  template:
    spec:
      virtualMachineBootstrapCheck:
        checkStrategy: none
      virtualMachineTemplate:
        metadata:
          labels:
            app: capi-quickstart-md-0
          namespace: default
        spec:
          dataVolumeTemplates:
          - metadata:
              name: boot-volume
            spec:
              pvc:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 10G
                storageClassName: longhorn
                volumeMode: Block
              source:
                http:
                  url: https://factory.talos.dev/image/376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba/v1.9.5/openstack-amd64.raw.xz # https://factory.talos.dev/image/376567988ad370138ad8b2698212367b8edcb69b5fd68c80be1f2ec7d603b4ba/v1.9.5/openstack-amd64.iso
                # pvc:
                  # name: quay.io/capk/ubuntu-2404-container-disk:v1.32.1
                  # namespace: default
          instancetype:
            kind: VirtualMachineClusterInstancetype
            name: o1.xlarge
          preference:
            kind: VirtualMachineClusterPreference
            name: talos
          runStrategy: Always
          template:
            metadata:
              labels:
                app: capi-quickstart-md-0
            spec:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - key: app
                          operator: In
                          values:
                          - capi-quickstart-md-0
                      topologyKey: kubernetes.io/hostname
                    weight: 100
              domain:
                devices:
                  disks:
                  - disk:
                      bus: virtio
                    name: dv-volume
                  networkInterfaceMultiqueue: true
              evictionStrategy: External
              volumes:
              - dataVolume:
                  name: boot-volume
                name: dv-volume
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: TalosConfigTemplate
metadata:
  name: capi-quickstart-md-0-t18
  namespace: default
spec:
  template:
    spec:
      generateType: join
      talosVersion: v1.9.5
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: capi-quickstart
  name: capi-quickstart-md-0
  namespace: default
spec:
  clusterName: capi-quickstart
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: capi-quickstart
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: capi-quickstart
        node-role.kubernetes.io/worker: ""
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: TalosConfigTemplate
          name: capi-quickstart-md-0-t18
      clusterName: capi-quickstart
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: KubevirtMachineTemplate
        name: capi-quickstart-md-0-t18
        namespace: default
      version: v1.32.1
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineHealthCheck
metadata:
  name: capi-quickstart-md-0
  namespace: default
spec:
  clusterName: capi-quickstart
  maxUnhealthy: 100%
  nodeStartupTimeout: 10m
  selector:
    matchLabels:
      cluster.x-k8s.io/deployment-name: capi-quickstart-md-0
  unhealthyConditions:
  - status: Unknown
    timeout: 300s
    type: Ready
  - status: "False"
    timeout: 300s
    type: Ready
